openapi: 3.0.0
info:
  title: Dokumentasi API Infotiket.in
  description: Infotiket.in adalah website penyedia pemesanan tiket pesawat terbang!
  version: 1.0.0
  contact:
    email: Infotiket.in@gmail.com
servers:
  - url: https://expressjs-production-d668.up.railway.app/api/v1/
    description: URL Production
  - url: https://expressjs-develop-b4d1.up.railway.app/api/v1/
    description: URL Develop
  - url: http://localhost:3000/api/v1/
    description: URL localhost

paths:
  /auth/daftar-sekarang:
    post:
      tags:
        - "Autentikasi"
      summary: Mendaftarkan Pengguna Baru
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Mendaftar"

      responses:
        201:
          description: Sukses
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Akun berhasil dibuat. Silahkan periksa email Anda untuk verifikasi!
                  data:
                    type: object
                    properties:
                      id:
                        type: number
                        example: 1
                      first_name:
                        type: string
                        example: BE3
                      last_name:
                        type: string
                        example: Infotiket.in
                      email:
                        type: string
                        example: infotiketin@gmail.com
                      is_verified:
                        type: boolean
                        example: false
                      image_url:
                        type: string
                        example: null
                      role:
                        type: string
                        example: user

        400:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Email sudah digunakan sebelumnya!
                  data:
                    type: string
                    example: null

  /auth/masuk:
    post:
      tags:
        - "Autentikasi"
      summary: Login dengan email dan kata sandi
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Login"

      responses:
        200:
          description: Sukses
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Anda telah berhasil masuk!
                  data:
                    type: object
                    properties:
                      id:
                        type: number
                        example: 1
                      first_name:
                        type: string
                        example: BE3
                      last_name:
                        type: string
                        example: Infotiket.in
                      email:
                        type: string
                        example: infotiketin@gmail.com
                      is_verified:
                        type: boolean
                        example: false
                      image_url:
                        type: string
                        example: null
                      role:
                        type: string
                        example: user
                      token:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MywiaWF0IjoxNzE2NzI1ODMyfQ.b19b_5Os8Tbj_ltRoGyOkD8KfxZ-S-12312scwasr23
        400:
          description: Error
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      status:
                        type: boolean
                        example: false
                      message:
                        type: string
                        example: Silahkan verifikasi email Anda. Tautan verifikasi telah dikirim ke email Anda!
                      data:
                        type: string
                        example: null
                  - type: object
                    properties:
                      status:
                        type: boolean
                        example: false
                      message:
                        type: string
                        example: Email atau kata sandi tidak valid!
                      data:
                        type: string
                        example: null

  /auth/verifikasi:
    get:
      tags:
        - "Autentikasi"
      summary: "Verifikasi Email"
      parameters:
        - schema:
            type: string
          name: token
          in: "query"
          description: "Token autentikasi"
          required: true

      responses:
        200:
          description: Sukses
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Verifikasi Sukses
                  data:
                    type: string
                    example: null

        400:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Gagal diverifikasi
                  data:
                    type: string
                    example: null

  /auth/halaman-utama:
    get:
      tags:
        - "Autentikasi"
      summary: Selamat datang di Infotiket.in

      responses:
        200:
          description: Sukses
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Selamat Datang di website Infotiket.in!

        400:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Tidak ada token!
                  data:
                    type: string
                    example: null
      security:
        - bearerAuth: []

  /auth/lupa-kata-sandi:
    post:
      tags:
        - "Autentikasi"
      summary: Lupa sandi dengan email
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: infotiketin@gmail.com

      responses:
        200:
          description: Sukses
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Silahkan periksa email Anda untuk atur ulang kata sandi!
                  data:
                    type: string
                    example: null

        400:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Pengguna tidak ditemukan!
                  data:
                    type: string
                    example: null

  /auth/mengatur-ulang-kata-sandi:
    post:
      tags:
        - "Autentikasi"
      summary: "Setel ulang kata sandi"
      parameters:
        - schema:
            type: string
          name: token
          in: "query"
          description: "Token autentikasi"
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  example: tes
                confirmPassword:
                  type: string
                  example: tes

      responses:
        200:
          description: Sukses
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Berhasil mengubah kata sandi!
                  data:
                    type: string
                    example: null

        400:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Token tidak valid atau sudah kedaluwarsa!
                  data:
                    type: string
                    example: null

  /admin:
    post:
      tags:
        - "Admin"
      summary: Mendaftarkan Admin Baru - Akses hanya admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Mendaftar"

      responses:
        201:
          description: Sukses
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Akun berhasil dibuat. Silahkan periksa email Anda untuk verifikasi!
                  data:
                    type: object
                    properties:
                      id:
                        type: number
                        example: 1
                      first_name:
                        type: string
                        example: BE3
                      last_name:
                        type: string
                        example: Infotiket.in
                      email:
                        type: string
                        example: infotiketin@gmail.com
                      is_verified:
                        type: boolean
                        example: false
                      image_url:
                        type: string
                        example: null
                      role:
                        type: string
                        example: user

        400:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Email sudah digunakan sebelumnya!
                  data:
                    type: string
                    example: null
      security:
        - bearerAuth: []

  /admin/{id}:
    put:
      tags:
        - "Admin"
      summary: Mengubah menjadi admin - Akses hanya Admin
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
          description: ID dari user yang ingin diperoleh
      responses:
        "200":
          description: Berhasil mendapatkan data pengguna
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "x"
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 7
                      first_name:
                        type: string
                        example: "x"
                      last_name:
                        type: string
                        example: "x"
                      email:
                        type: string
                        format: email
                        example: "x@gmail.com"
                      password:
                        type: string
                        example: "x"
                      is_verified:
                        type: boolean
                        example: true
                      image_url:
                        type: string
                        nullable: true
                        example: null
                      google_id:
                        type: string
                        nullable: true
                        example: null
                      email_verification_attempts:
                        type: integer
                        example: 3
                      last_verification_attempt:
                        type: string
                        format: date-time
                        example: "x"
                      role:
                        type: string
                        example: "admin"
      security:
        - bearerAuth: []

  /users:
    get:
      tags:
        - "Admin"
      summary: Mengambil semua pengguna - Akses hanya Admin
      description: Mengambil semua pengguna.
      responses:
        "200":
          description: Berhasil mengambil semua pengguna
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Berhasil mengambil semua pengguna
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        first_name:
                          type: string
                          example: Infotiketi.n
                        last_name:
                          type: string
                          example: B3
                        email:
                          type: string
                          example: xy@gmail.com
                        password:
                          type: string
                          example: x
                        is_verified:
                          type: boolean
                          example: true
                        image_url:
                          type: string
                          nullable: true
                          example: null
                        google_id:
                          type: string
                          nullable: true
                          example: null
                        email_verification_attempts:
                          type: integer
                          example: 0
                        last_verification_attempt:
                          type: string
                          nullable: true
                          example: null
                        role:
                          type: string
                          example: admi
      security:
        - bearerAuth: []

  /users/{id}:
    get:
      tags:
        - "Admin"
      summary: Mendapatkan pengguna berdasarkan ID - Akses hanya Admin
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
          description: ID dari user yang ingin diperoleh
      responses:
        "200":
          description: get user success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: get user success
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      first_name:
                        type: string
                        example: x
                      last_name:
                        type: string
                        example: x
                      email:
                        type: string
                        example: x@gmail.com
                      password:
                        type: string
                        example: $x
                      is_verified:
                        type: boolean
                        example: true
                      image_url:
                        type: string
                        nullable: true
                        example: null
                      google_id:
                        type: string
                        nullable: true
                        example: null
                      email_verification_attempts:
                        type: integer
                        example: 0
                      last_verification_attempt:
                        type: string
                        nullable: true
                        example: null
                      role:
                        type: string
                        example: admin
      security:
        - bearerAuth: []

    delete:
      tags:
        - "Admin"
      summary: Menghapus pengguna berdasarkan ID - Akses hanya Admin
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
          description: ID dari user yang ingin diperoleh
      responses:
        "200":
          description: get user success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: get user success
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      first_name:
                        type: string
                        example: x
                      last_name:
                        type: string
                        example: x
                      email:
                        type: string
                        example: x@gmail.com
                      password:
                        type: string
                        example: $x
                      is_verified:
                        type: boolean
                        example: true
                      image_url:
                        type: string
                        nullable: true
                        example: null
                      google_id:
                        type: string
                        nullable: true
                        example: null
                      email_verification_attempts:
                        type: integer
                        example: 0
                      last_verification_attempt:
                        type: string
                        nullable: true
                        example: null
                      role:
                        type: string
                        example: admin
      security:
        - bearerAuth: []

  /notifikasi:
    get:
      tags:
        - "Notifikasi"
      summary: Mendapatkan notifikasi
      responses:
        "200":
          description: OK. Notifikasi berhasil ditemukan.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  subject:
                    type: string
                    example: "Pemberitahuan Penting"
                  message:
                    type: string
                    example: "Silakan periksa informasi terbaru."
        "404":
          description: Not Found. Notifikasi tidak ditemukan.
        "500":
          description: Internal Server Error. Terjadi kesalahan pada server.
      security:
        - bearerAuth: []

  /notifikasi/{id}:
    get:
      tags:
        - "Notifikasi"
      summary: Mendapatkan notifikasi berdasarkan ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
          description: ID dari notifikasi yang ingin diperoleh
      responses:
        "200":
          description: OK. Notifikasi berhasil ditemukan.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  subject:
                    type: string
                    example: "Pemberitahuan Penting"
                  message:
                    type: string
                    example: "Silakan periksa informasi terbaru."
        "404":
          description: Not Found. Notifikasi tidak ditemukan.
        "500":
          description: Internal Server Error. Terjadi kesalahan pada server.
      security:
        - bearerAuth: []

  /profile:
    get:
      tags:
        - "User atau Profil"
      summary: "Dapatkan Semua Profil Pengguna - Akses hanya Admin"
      description: Mengambil semua data profil pengguna
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Berhasil mengambil semua data profil pengguna
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Berhasil mengambil semua data profil pengguna
                  data:
                    type: object
                    properties:
                      users:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            first_name:
                              type: string
                              example: John
                            last_name:
                              type: string
                              example: Doe
                            email:
                              type: string
                              example: john.doe@example.com
                            is_verified:
                              type: boolean
                              example: true
                            image_url:
                              type: string
                              nullable: true
                              example: null
                            google_id:
                              type: string
                              nullable: true
                              example: null
                            email_verification_attempts:
                              type: integer
                              example: 0
                            last_verification_attempt:
                              type: string
                              nullable: true
                              example: null
                            role:
                              type: string
                              example: user
        "404":
          description: User tidak ditemukan
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: User tidak ditemukan
                  data:
                    type: object
                    nullable: true
                    example: null
        "500":
          description: Kesalahan Server Internal
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Kesalahan Server Internal
                  err:
                    type: string
                    example: Error message
                  data:
                    type: object
                    nullable: true
                    example: null

  /profil:
    post:
      tags:
        - "User atau Profil"
      summary: Mendaftarkan Pengguna Baru
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Mendaftar"

      responses:
        201:
          description: Sukses
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Akun berhasil dibuat. Silahkan periksa email Anda untuk verifikasi!
                  data:
                    type: object
                    properties:
                      id:
                        type: number
                        example: 1
                      first_name:
                        type: string
                        example: BE3
                      last_name:
                        type: string
                        example: Infotiket.in
                      email:
                        type: string
                        example: infotiketin@gmail.com
                      is_verified:
                        type: boolean
                        example: false
                      image_url:
                        type: string
                        example: null
                      role:
                        type: string
                        example: user

        400:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Email sudah digunakan sebelumnya!
                  data:
                    type: string
                    example: null
      security:
        - bearerAuth: []

    get:
      tags:
        - "User atau Profil"
      summary: "Dapatkan Profil pengguna"

      responses:
        200:
          description: Sukses
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Berhasil mengambil data
                  data:
                    type: object
                    properties:
                      id:
                        type: number
                        example: 1
                      first_name:
                        type: string
                        example: BE3
                      last_name:
                        type: string
                        example: Infotiket.in
                      email:
                        type: string
                        example: infotiketin@gmail.com
                      is_verified:
                        type: boolean
                        example: true
                      image_url:
                        type: string
                        example: null
                      role:
                        type: string
                        example: user

        400:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Tidak ada token!
                  data:
                    type: string
                    example: null
      security:
        - bearerAuth: []

    put:
      tags:
        - "User atau Profil"
      summary: "Memperbaharui profil pengguna"
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  example: x
                last_name:
                  type: string
                  example: x
                password:
                  type: string
                  example: x
                confirmPassword:
                  type: string
                  example: x
                gambar_url:
                  type: string
                  format: binary
      responses:
        200:
          description: Sukses
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Berhasil memperbaharui profil pengguna
                  data:
                    type: object
                    properties:
                      id:
                        type: number
                        example: 1
                      first_name:
                        type: string
                        example: BE3
                      last_name:
                        type: string
                        example: Infotiket.in
                      email:
                        type: string
                        example: infotiketin@gmail.com
                      is_verified:
                        type: boolean
                        example: true
                      image_url:
                        type: string
                        example: https://ik.imagekit.io/gis/1716888675180_3hjYL9i1u.jpg
                      role:
                        type: string
                        example: user

        400:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Kata sandi tidak cocok!
                  data:
                    type: string
                    example: null

        500:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Gagal mengunggah gambar!
                  data:
                    type: string
                    example: null
      security:
        - bearerAuth: []

    delete:
      tags:
        - "User atau Profil"
      summary: Menghapus pengguna profil pengguna - Akses hanya Admin
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the user to delete
      responses:
        "200":
          description: User profile successfully deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Berhasil menghapus profil
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      first_name:
                        type: string
                        example: x
                      last_name:
                        type: string
                        example: x
                      email:
                        type: string
                        example: x@gmail.com
                      password:
                        type: string
                        example: $x
                      is_verified:
                        type: boolean
                        example: true
                      image_url:
                        type: string
                        nullable: true
                        example: null
                      google_id:
                        type: string
                        nullable: true
                        example: null
                      email_verification_attempts:
                        type: integer
                        example: 0
                      last_verification_attempt:
                        type: string
                        nullable: true
                        example: null
                      role:
                        type: string
                        example: admin
        "404":
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: user not found
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Kesalahan Server Internal
                  err:
                    type: string
                    example: error message
      security:
        - bearerAuth: []

  /flights:
    get:
      tags:
        - "Penerbangan"
      summary: "Mencari jadwal penerbangan"
      parameters:
        - name: departureAirport
          in: query
          required: true
          schema:
            type: string
          description: "Kode IATA bandara keberangkatan"
          example: "CGK"
        - name: arrivalAirport
          in: query
          required: true
          schema:
            type: string
          description: "Kode IATA bandara kedatangan"
          example: "DPS"
        - name: departureDate
          in: query
          required: true
          schema:
            type: string
            format: date
          description: "Tanggal keberangkatan (YYYY-MM-DD)"
          example: "2024-06-30"
        - name: returnDate
          in: query
          required: false
          schema:
            type: string
            format: date
          description: "Tanggal pulang (YYYY-MM-DD)"
          example: "2024-07-01"
        - name: flightClass
          in: query
          required: false
          schema:
            type: string
          description: "Kelas penerbangan (EKONOMI, BISNIS, FIRST)"
          example: "EKONOMI"
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 1
          description: "Nomor halaman untuk pagination"
          example: 1
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 10
          description: "Jumlah hasil per halaman untuk pagination"
          example: 10
      responses:
        200:
          description: "Sukses"
          content:
            application/json:
              schema:
                type: object
                properties:
                  departureFlights:
                    type: array
                    items:
                      $ref: "#/components/schemas/Flight"
                  departurePagination:
                    $ref: "#/components/schemas/Pagination"
                  returnFlights:
                    type: array
                    items:
                      $ref: "#/components/schemas/Flight"
                  returnPagination:
                    $ref: "#/components/schemas/Pagination"
        404:
          description: "Jadwal Tidak Ditemukan"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Jadwal Tidak Ditemukan"
        500:
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Internal server error: {error message}"

  /bandara:
    post:
      tags:
        - "Bandara"
      summary: Membuat data Bandara - Akses hanya Admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name_airport:
                  type: string
                  example: Bandara Internasional Soekarno-Hatta
                city:
                  type: string
                  example: Tangerang
                province:
                  type: string
                  example: Banten
                time_zone:
                  type: string
                  example: Waktu Indonesia Barat
                iata_code:
                  type: string
                  example: CGK
              required:
                - name_airport
                - city
                - province
                - time_zone
                - iata_code
      responses:
        "201":
          description: Airport successfully created
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Berhasil membuat data bandara
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name_airport:
                        type: string
                        example: Bandara Internasional Soekarno-Hatta
                      city:
                        type: string
                        example: Tangerang
                      province:
                        type: string
                        example: Banten
                      time_zone:
                        type: string
                        example: Waktu Indonesia Barat
                      iata_code:
                        type: string
                        example: CGK
        "400":
          description: Invalid request body
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Request body tidak valid
                  err:
                    type: string
                    example: error message
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Kesalahan Server Internal
                  err:
                    type: string
                    example: error message
      security:
        - bearerAuth: []

    get:
      tags:
        - "Bandara"
      summary: Daftar Semua Data Bandara
      responses:
        201:
          description: sukses
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name_airport:
                          type: string
                        city:
                          type: string
                        province:
                          type: string
                        time_zone:
                          type: string
                        iata_code:
                          type: string
                        from_flights:
                          type: array
                        to_flights:
                          type: array

              examples:
                responses:
                  value:
                    status: true
                    message: Berhasil menampilkan semua data Bandara
                    data:
                      - id: 1
                        name_airport: APT Pranoto Airport
                        city: Samarinda
                        province: Kalimantan Timur
                        time_zone: UTC+8
                        iata_code: AAP
                        from_flights: []
                        to_flights: []
                      - id: 2
                        name_airport: Abdul Rachman Saleh
                        city: Malang
                        province: Jawa Timur
                        time_zone: UTC+7
                        iata_code: MLG
                        from_flights: []
                        to_flights: []

        404:
          description: Halaman Tidak Ditemukan 404
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Halaman Tidak Ditemukan 404
                  err:
                    type: string
                    example: Cannot find /api/v1/bandaraa
                  data:
                    type: string
                    example: null

  /bandara/{id}:
    parameters:
      - schema:
          type: integer
        name: id
        in: path
        required: true

    get:
      tags:
        - "Bandara"
      summary: Daftar Data Bandara dengan ID

      responses:
        200:
          description: sukses
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: true
                  message:
                    type: string
                    example: Berhasil menampilkan semua data Bandara
                  data:
                    allOf:
                      - $ref: "#/components/schemas/Bandara"

        404:
          description: Halaman Tidak Ditemukan 404
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Data Airport tidak ditemukan!
                  data:
                    type: string
                    example: null

    put:
      tags:
        - "Bandara"
      summary: Memperbaharui Data Bandara dengan ID - Akses hanya Admin
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the airport to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name_airport:
                  type: string
                  example: Nama Bandara Baru
                city:
                  type: string
                  example: Kota Baru
                province:
                  type: string
                  example: Provinsi Baru
                time_zone:
                  type: string
                  example: Waktu Baru
                iata_code:
                  type: string
                  example: Kode Baru
      responses:
        "200":
          description: Airport details successfully updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Berhasil memperbarui data bandara
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name_airport:
                        type: string
                        example: Nama Bandara Baru
                      city:
                        type: string
                        example: Kota Baru
                      province:
                        type: string
                        example: Provinsi Baru
                      time_zone:
                        type: string
                        example: Waktu Baru
                      iata_code:
                        type: string
                        example: Kode Baru
        "404":
          description: Airport not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Data Airport tidak ditemukan!
                  data:
                    type: string
                    example: null
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Kesalahan Server Internal
                  err:
                    type: string
                    example: error message
                  data:
                    type: string
                    example: null
      security:
        - bearerAuth: []

    delete:
      tags:
        - "Bandara"
      summary: Menghapus Data Bandara dengan ID - Akses hanya Admin
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the airport to delete
      responses:
        "200":
          description: Data bandara berhasil dihapus
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Berhasil menghapus data bandara
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name_airport:
                        type: string
                        example: Nama Bandara Baru
                      city:
                        type: string
                        example: Kota Baru
                      province:
                        type: string
                        example: Provinsi Baru
                      time_zone:
                        type: string
                        example: Waktu Baru
                      iata_code:
                        type: string
                        example: Kode Baru
        "404":
          description: Airport not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Data Airport tidak ditemukan!
                  data:
                    type: string
                    example: null
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Kesalahan Server Internal
                  err:
                    type: string
                    example: error message
                  data:
                    type: string
                    example: null
      security:
        - bearerAuth: []

  /airlines:
    post:
      tags:
        - "Maskapai"
      summary: Membuat data Maskapai - Akses hanya Admin
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Citilink
                short_name:
                  type: string
                  example: Citilink
                file:
                  type: string
                  format: binary
                iata_code:
                  type: string
                  example: QG
      responses:
        201:
          description: Airline successfully created
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Berhasil membuat data maskapai
                  data:
                    allOf:
                      - $ref: "#/components/schemas/Maskapai"
        400:
          description: Invalid request body
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Request body tidak valid
                  err:
                    type: string
                    example: error message
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Kesalahan Server Internal
                  err:
                    type: string
                    example: error message
      security:
        - bearerAuth: []

    get:
      tags:
        - "Maskapai"
      summary: Daftar Semua Data Maskapai
      responses:
        200:
          description: sukses
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: true
                  message:
                    type: string
                    example: Berhasil menampilkan semua data maskapai
                  data:
                    allOf:
                      - $ref: "#/components/schemas/Maskapai"
        404:
          description: Halaman Tidak Ditemukan 404
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Data maskapai tidak ditemukan!
                  data:
                    type: string
                    example: null

  /airlines/{id}:
    parameters:
      - schema:
          type: integer
        name: id
        in: path
        required: true
    get:
      tags:
        - "Maskapai"
      summary: Data Maskapai by Id
      responses:
        200:
          description: sukses
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: true
                  message:
                    type: string
                    example: Berhasil mendapatkan data maskapai
                  data:
                    allOf:
                      - $ref: "#/components/schemas/Maskapai"
        404:
          description: Halaman Tidak Ditemukan 404
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Data maskapai tidak ditemukan!
                  data:
                    type: string
                    example: null
    put:
        tags:
          - "Maskapai"
        summary: "Edit Data Maskapai - Akses hanya Admin"
        requestBody:
          content:
            multipart/form-data:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: Citilink
                  short_name:
                    type: string
                    example: Citilink
                  file:
                    type: string
                    format: binary
                  iata_code:
                    type: string
                    example: QG
        responses:
          200:
            description: Sukses
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: Berhasil memperbaharui data maskapai
                    data:
                      allOf:
                        - $ref: "#/components/schemas/Maskapai"
          400:
            description: Error
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: boolean
                      example: false
                    message:
                      type: string
                      example: Invalid request body!
                    data:
                      type: string
                      example: null
          500:
            description: Error
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: boolean
                      example: false
                    message:
                      type: string
                      example: Internal server error!
                    data:
                      type: string
                      example: null
        security:
          - bearerAuth: []

    delete:
      tags:
        - "Maskapai"
      summary: Hapus Data Maskapai - Akses hanya Admin
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: airline ID to delete
      responses:
        200:
          description: Data maskapai berhasil dihapus
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Berhasil menghapus data maskapai
                  data:
                    allOf:
                      - $ref: "#/components/schemas/Maskapai"
        404:
          description: Airport not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Data Maskapai tidak ditemukan!
                  data:
                    type: string
                    example: null
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Kesalahan Server Internal
                  err:
                    type: string
                    example: error message
                  data:
                    type: string
                    example: null
      security:
        - bearerAuth: []

  /airplanes:
    post:
      tags:
        - "Pesawat"
      summary: Tambahkan Data Pesawat
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                model:
                  type: string
                  example: Airbus A320
                seat_layout:
                  type: string
                  example: 3-3
                seat_pitch:
                  type: integer
                  example: 29
                seat_amount:
                  type: integer
                  example: 120
                airline_id:
                  type: integer
                  example: 1
      responses:
        200:
          description: sukses
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: true
                  message:
                    type: string
                    example: Berhasil menambahkan data pesawat
                  data:
                    allOf:
                      - $ref: "#/components/schemas/Pesawat"
        400:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Invalid request body!
                  data:
                    type: string
                    example: null
        500:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Internal server error!
                  data:
                    type: string
                    example: null
      security:
        - bearerAuth: []
    get:
      tags:
        - "Pesawat"
      summary: Daftar Semua Data Pesawat
      responses:
        200:
          description: sukses
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: true
                  message:
                    type: string
                    example: Berhasil mendapatkan data pesawat
                  data:
                    allOf:
                      - $ref: "#/components/schemas/Pesawat"
        404:
          description: Halaman Tidak Ditemukan 404
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Data pesawat tidak ditemukan!
                  data:
                    type: string
                    example: null

  /airplanes/{id}:
    parameters:
      - schema:
          type: integer
        name: id
        in: path
        required: true
    get:
      tags:
        - "Pesawat"
      summary: Data Pesawat by Id
      responses:
        200:
          description: sukses
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: true
                  message:
                    type: string
                    example: Berhasil mendapatkan data pesawat
                  data:
                    allOf:
                      - $ref: "#/components/schemas/Pesawat"
        404:
          description: Halaman Tidak Ditemukan 404
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Data pesawat tidak ditemukan!
                  data:
                    type: string
                    example: null

    put:
      tags:
        - "Pesawat"
      summary: Edit Data Pesawat - Akses hanya Admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                model:
                  type: string
                  example: Airbus A320
                seat_layout:
                  type: string
                  example: 3-3
                seat_pitch:
                  type: integer
                  example: 29
                seat_amount:
                  type: integer
                  example: 120
                airline_id:
                  type: integer
                  example: 1
      responses:
        200:
          description: sukses
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: true
                  message:
                    type: string
                    example: Berhasil menambahkan data pesawat
                  data:
                    allOf:
                      - $ref: "#/components/schemas/Pesawat"
        400:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Invalid request body!
                  data:
                    type: string
                    example: null
        500:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Internal server error!
                  data:
                    type: string
                    example: null
      security:
        - bearerAuth: []

    delete:
      tags: 
        - "Pesawat"
      summary: Hapus Data Pesawat - Akses hanya Admin
      responses:
        200:
          description: Sukses
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Berhasil menghapus data pesawat
                  data:
                    type: string
                    example: null
        404:
          description: Halaman Tidak Ditemukan 404
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Data pesawat tidak ditemukan!
                  data:
                    type: string
                    example: null
      security:
        - bearerAuth: []

  /booking:
    post:
      tags:
        - "Pemesanan dan Penumpang"
      summary: Membuat Booking dan Menambahkan Penumpang
      parameters:
        - in: query
          name: schedule_id
          schema:
            type: string
          required: true
          description: ID jadwal penerbangan yang akan dibooking
        - in: query
          name: return_schedule_id
          schema:
            type: string
          required: false
          description: ID jadwal penerbangan yang akan dibooking
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                booking_date:
                  type: string
                  format: date
                  example: "2024-07-01"
                total_passenger:
                  type: integer
                  example: 1
                passengers:
                  type: array
                  items:
                    type: object
                    properties:
                      birth_date:
                        type: string
                        format: date
                        example: "1990-01-01"
                      type:
                        type: string
                        enum:
                          - Adult
                          - Child
                          - Infant
                        example: "Adult"
                      id_passport_number:
                        type: string
                        example: "A1234567"
                      citizenship:
                        type: string
                        example: "Indonesia"
                      gender:
                        type: string
                        enum:
                          - Male
                          - Female
                        example: "Male"
                      first_name:
                        type: string
                        example: "John"
                      last_name:
                        type: string
                        example: "Doe"
                      phone_number:
                        type: string
                        example: "08123456789"

      responses:
        "200":
          description: Booking berhasil dibuat
        "400":
          description: Permintaan tidak valid
        "404":
          description: Jadwal penerbangan tidak ditemukan
      security:
        - bearerAuth: []
  /get-payment-list:
    get:
      tags:
        - "Pembayaran"
      summary: Mendapatkan Daftar Metode Pembayaran
      responses:
        200:
          description: Sukses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PaymentMethod"
        500:
          description: Kesalahan server
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Terjadi kesalahan saat mengambil metode pembayaran.

  /pay:
    post:
      tags:
        - "Pembayaran"
      summary: Melakukan Pembayaran
      parameters:
        - name: booking_id
          in: query
          required: true
          schema:
            type: integer
          description: ID Pemesanan
        - name: payment_method
          in: query
          required: true
          schema:
            type: string
          description: Metode Pembayaran
      responses:
        200:
          description: Pembayaran Berhasil
          content:
            application/json:
              schema:
                type: object
                properties:
                  transaction:
                    $ref: "#/components/schemas/Transaction"
                  ticket_price:
                    type: number
                    example: 1000000
                  admin_tax:
                    type: number
                    example: 20000
                  ppn:
                    type: number
                    example: 100000
                  total_price:
                    type: number
                    example: 1120000
        404:
          description: Data tidak ditemukan
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Booking tidak ditemukan
        500:
          description: Kesalahan server
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Terjadi kesalahan saat memproses pembayaran.

  /check-payment-status:
    get:
      tags:
        - "Pembayaran"
      summary: Memeriksa Status Pembayaran
      parameters:
        - name: merchant_ref
          in: query
          required: true
          schema:
            type: string
          description: Referensi Merchant
      responses:
        200:
          description: Status Pembayaran Berhasil Ditemukan
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payment"
        404:
          description: Pembayaran tidak ditemukan
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Pembayaran tidak ditemukan
        500:
          description: Kesalahan server
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Terjadi kesalahan saat memeriksa status pembayaran.

  /get-payments:
    get:
      tags:
        - "Pembayaran"
      summary: Mendapatkan Semua Pembayaran Pengguna
      responses:
        200:
          description: Pembayaran Berhasil Ditemukan
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Payment"
        404:
          description: Tidak ada pembayaran yang ditemukan
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Tidak ada pembayaran yang ditemukan untuk user ini
                  data:
                    type: string
                    example: null
        500:
          description: Kesalahan server
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Terjadi kesalahan saat mendapatkan pembayaran
                  data:
                    type: string
                    example: null

  /get-pending-payments:
    get:
      tags:
        - "Pembayaran"
      summary: Mendapatkan Pembayaran yang Pending
      responses:
        200:
          description: Pembayaran Pending Berhasil Ditemukan
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Payment"
        404:
          description: Tidak ada pembayaran yang pending ditemukan
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Tidak ada pembayaran yang ditemukan untuk user ini
                  data:
                    type: string
                    example: null
        500:
          description: Kesalahan server
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Terjadi kesalahan saat mendapatkan pembayaran yang pending
                  data:
                    type: string
                    example: null
  /webhook:
    post:
      tags:
        - "Webhook dan Tiket"
      summary: Webhook dari Tripay untuk Pembayaran
      requestBody:
        description: Body akan dihandle oleh Tripay sebagai pihak ketiga payment gateway
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                merchant_ref:
                  type: string
                  description: Referensi Merchant
                  example: ORDER-24-1719736304659
                status:
                  type: string
                  description: Status Pembayaran
                  example: PAID
      responses:
        200:
          description: Tiket berhasil dikirim ke email pengguna
          content:
            application/json:
              schema:
                type: object
                properties:
                  Notification:
                    type: string
                    example: Tickets sent to johndoe@example.com with status PAID
                  status:
                    type: integer
                    example: 200
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/TicketWithDetails"
        400:
          description: Status tidak valid
          content:
            text/plain:
              schema:
                type: string
                example: Invalid status
        404:
          description: Data tidak ditemukan
          content:
            text/plain:
              schema:
                type: string
                example:
                  paymentNotFound:
                    value: Payment not found
                  scheduleNotFound:
                    value: Schedule tidak ditemukan
                  returnScheduleNotFound:
                    value: Return schedule tidak ditemukan
        500:
          description: Kesalahan server
          content:
            text/plain:
              schema:
                type: string
                example: Error updating transaction status

  /payment-confirmation:
    get:
      tags:
        - "Webhook dan Tiket"
      summary: Konfirmasi Pembayaran
      parameters:
        - name: tripay_merchant_ref
          in: query
          required: true
          schema:
            type: string
          description: Referensi Merchant dari Tripay
      responses:
        200:
          description: Pembayaran Berhasil Dikonfirmasi
          content:
            text/plain:
              schema:
                type: string
                example: Selamat, pembayaran Anda berhasil. Silahkan cek email Anda untuk mencetak tiket Anda.
        400:
          description: Pembayaran belum dikonfirmasi
          content:
            text/plain:
              schema:
                type: string
                example: Pembayaran Anda belum dikonfirmasi. Silahkan coba lagi nanti.
        404:
          description: Data tidak ditemukan
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example:
                      paymentNotFound:
                        value: Pembayaran tidak ditemukan
                      bookingNotFound:
                        value: Booking tidak ditemukan
                      scheduleNotFound:
                        value: Schedule tidak ditemukan
        500:
          description: Kesalahan server
          content:
            text/plain:
              schema:
                type: string
                example: Error confirming payment

  /get-ticket:
    get:
      tags:
        - "Webhook dan Tiket"
      summary: Mendapatkan Tiket berdasarkan Booking ID
      parameters:
        - name: bookingId
          in: query
          required: true
          schema:
            type: integer
          description: ID Pemesanan
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
          description: Bearer token untuk otentikasi
      responses:
        200:
          description: Tiket Berhasil Ditemukan
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TicketWithDetails"
        404:
          description: Data tidak ditemukan atau tidak diotorisasi
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Booking not found or not authorized
        500:
          description: Kesalahan server
          content:
            text/plain:
              schema:
                type: string
                example: Error getting ticket details

  /get-all-tickets:
    get:
      tags:
        - "Webhook dan Tiket"
      summary: Mendapatkan Semua Tiket Pengguna
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
          description: Bearer token untuk otentikasi
      responses:
        200:
          description: Semua Tiket Berhasil Ditemukan
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TicketWithDetails"
        500:
          description: Kesalahan server
          content:
            text/plain:
              schema:
                type: string
                example: Error getting tickets

  /groq-chat-bot:
    post:
      tags:
        - "Chat bot Groq"
      summary: Mengirim permintaan ke Groq Chatbot
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  example: "Apa itu Infotiket.in?"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Berhasil membuat permintaan ke server Groq!
                  data:
                    type: object
                    example: Infotiket.in adalah sebuah platfom online berbasis teknologi informasi yang menawarkan jasa ticketing dan sistem booking untuk berbagai macam event, pertunjukan, konser, dan lain-lain. Mereka menawarkan fitur-fitur seperti penjualan tiket online, pembayaran online, sistem reservasi, dan pelacakan penjualan.\n\nDengan menggunakan Infotiket.in, pengguna dapat membeli tiket secara online dan langsung menerima konfirmasi pembelian melalui email. Platform ini juga memungkinkan pengguna untuk membuat acara sendiri, mengatur harga tiket, dan mengatur kapasitas peserta.\n\nInfotiket.in dapat digunakan oleh event organizer, venue, dan kontraktor untuk manajemen tiket dan pengelolaan acara. Mereka juga menawarkan integrasi dengan berbagai sistem dan aplikasi lainnya, seperti sistem tiket manajemen, sistem reservasi, dan sistem booking.\n\nDalam beberapa kata, Infotiket.in adalah sebuah platform ticketing online yang membantu mengurangi biaya operasional, meningkatkan efisiensi, serta meningkatkan kualitas pelayanan pelanggan untuk event dan pertunjukan.
        "500":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Internal server error"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    google_oauth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://expressjs-develop-b4d1.up.railway.app/api/v1/auth/google
          tokenUrl: https://oauth2.googleapis.com/token
  schemas:
    Mendaftar:
      type: object
      properties:
        first_name:
          type: string
          example: BE3
        last_name:
          type: string
          example: Infotiket.in
        email:
          type: string
          example: infotiketin@gmail.com
        password:
          type: string
          example: password123
        confirmPassword:
          type: string
          example: password123
    Login:
      type: object
      properties:
        email:
          type: string
          example: infotiketin@gmail.com
        password:
          type: string
          example: password123
    Bandara:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name_airport:
          type: string
          example: APT Pranoto Airport
        city:
          type: string
          example: Samarinda
        province:
          type: string
          example: Kalimantan Timur
        time_zone:
          type: string
          example: UTC+8
        iata_code:
          type: string
          example: AAP
        from_flights:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 245
              departure_airport_id:
                type: integer
                example: 1
              arrival_airport_id:
                type: integer
                example: 25
              airline_id:
                type: integer
                example: 1
              departure_time:
                type: string
                example: "10:55"
              arrival_time:
                type: string
                example: "11:25"
              price:
                type: number
                example: 1315385
              flight_number:
                type: string
                example: "QG-461"
              free_baggage:
                type: integer
                example: 20
              cabin_baggage:
                type: integer
                example: 7
              duration_minute:
                type: integer
                example: 90
              class:
                type: string
                example: "ECONOMY"
              is_sunday:
                type: boolean
                example: true
              is_monday:
                type: boolean
                example: false
              is_tuesday:
                type: boolean
                example: false
              is_wednesday:
                type: boolean
                example: false
              is_thursday:
                type: boolean
                example: false
              is_friday:
                type: boolean
                example: false
              is_saturday:
                type: boolean
                example: false
        to_flights:
          type: array
          example: []
          items:
            type: object
            properties:
              id:
                type: integer
                example: 385
              departure_airport_id:
                type: integer
                example: 25
              arrival_airport_id:
                type: integer
                example: 1
              airline_id:
                type: integer
                example: 1
              departure_time:
                type: string
                example: "06:55"
              arrival_time:
                type: string
                example: "09:35"
              price:
                type: number
                example: 1405265
              flight_number:
                type: string
                example: "QG-460"
              free_baggage:
                type: integer
                example: 20
              cabin_baggage:
                type: integer
                example: 7
              duration_minute:
                type: integer
                example: 100
              class:
                type: string
                example: "ECONOMY"
              is_sunday:
                type: boolean
                example: false
              is_monday:
                type: boolean
                example: true
              is_tuesday:
                type: boolean
                example: false
              is_wednesday:
                type: boolean
                example: false
              is_thursday:
                type: boolean
                example: false
              is_friday:
                type: boolean
                example: false
              is_saturday:
                type: boolean
                example: false
    Maskapai:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Citilink
        short_name:
          type: string
          example: Citilink
        icon_url:
          type: string
          example: https://upload.wikimedia.org/wikipedia/commons/d/d4/2012_Citilink_Logo.svg
        iata_code:
          type: string
          example: QG
    Pesawat:
      type: object
      properties:
        id:
          type: integer
          example: 1
        model:
          type: string
          example: Airbus A320
        seat_layout:
          type: string
          example: 3-3
        seat_pitch:
          type: integer
          example: 29
        seat_type:
          type: string
          example: STANDARD_LEGROOM
        seat_amount:
          type: integer
          example: 120
        airline_id:
          type: integer
          example: 1
    Flight:
      type: object
      properties:
        id:
          type: integer
          example: 1
        departure_airport:
          $ref: "#/components/schemas/Airport"
        arrival_airport:
          $ref: "#/components/schemas/Airport"
        airline:
          $ref: "#/components/schemas/Airline"
        class:
          type: string
          example: "EKONOMI"
        Date:
          type: string
          format: date-time
          example: "2024-06-30T08:00:00.000Z"
    Airport:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "Soekarno-Hatta International Airport"
        iata_code:
          type: string
          example: "CGK"
        city:
          type: string
          example: "Jakarta"
    Airline:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "Garuda Indonesia"
        icon_url:
          type: string
          example: "https://example.com/garuda-indonesia.png"
    Pagination:
      type: object
      properties:
        link:
          type: object
          properties:
            next:
              type: string
              example: "http://localhost:3000/api/v1/flights?page=2&limit=10"
            prev:
              type: string
              example: "http://localhost:3000/api/v1/flights?page=1&limit=10"
        total:
          type: integer
          example: 100
    PaymentMethod:
      type: object
      properties:
        group:
          type: string
          example: Virtual Account
        code:
          type: string
          example: BRIVA
        name:
          type: string
          example: BRI Virtual Account
        type:
          type: string
          example: direct
        fee_merchant:
          type: object
          properties:
            flat:
              type: integer
              example: 4250
            percent:
              type: integer
              example: 0
        fee_customer:
          type: object
          properties:
            flat:
              type: integer
              example: 0
            percent:
              type: integer
              example: 0
        total_fee:
          type: object
          properties:
            flat:
              type: integer
              example: 4250
            percent:
              type: string
              example: "0.00"
        minimum_fee:
          type: integer
          nullable: true
          example: null
        maximum_fee:
          type: integer
          nullable: true
          example: null
        minimum_amount:
          type: integer
          example: 10000
        maximum_amount:
          type: integer
          example: 10000000
        icon_url:
          type: string
          example: https://assets.tripay.co.id/upload/payment-icon/8WQ3APST5s1579461828.png
        active:
          type: boolean
          example: true

    Transaction:
      type: object
      properties:
        amount:
          type: number
          example: 1120000
        method:
          type: string
          example: BRIVA
        merchant_ref:
          type: string
          example: ORDER-24-1719736304659
        customer_name:
          type: string
          example: John Doe
        customer_email:
          type: string
          example: johndoe@example.com
        customer_phone:
          type: string
          example: 08123456789
        expired_time:
          type: number
          example: 1622520000
        callback_url:
          type: string
          example: https://infotiket.in/api/v1/webhook
        return_url:
          type: string
          example: https://infotiket.in/konfirmasi-pembayaran
        checkout_url:
          type: string
          example: url redirect from tripay
        signature:
          type: string
          example: f5d1278e8109edd94e1e4197e04873b9

    Payment:
      type: object
      properties:
        booking_id:
          type: integer
          example: 24
        payment_date:
          type: string
          format: date-time
          example: 2024-06-30T12:34:56Z
        amount:
          type: number
          example: 1120000
        payment_method:
          type: string
          example: BRIVA
        status:
          type: string
          example: PENDING
        merchant_ref:
          type: string
          example: ORDER-24-1719736304659
        admin_tax:
          type: number
          example: 20000
        ppn_tax:
          type: number
          example: 100000
    TicketWithDetails:
      type: object
      properties:
        id:
          type: integer
          example: 1
        booking_id:
          type: integer
          example: 1
        ticket_number:
          type: string
          example: TICKET-12345678
        passenger_id:
          type: integer
          example: 1
        schedule_id:
          type: integer
          example: 1
        return_schedule_id:
          type: integer
          example: null
        created_at:
          type: string
          format: date-time
          example: 2024-06-27T12:34:56Z
        updated_at:
          type: string
          format: date-time
          example: 2024-06-27T12:34:56Z
        passenger:
          type: object
          properties:
            id:
              type: integer
              example: 1
            name:
              type: string
              example: John Doe
        schedule:
          type: object
          properties:
            id:
              type: integer
              example: 1
            departure_airport:
              type: object
              properties:
                id:
                  type: integer
                  example: 1
                name:
                  type: string
                  example: Soekarno-Hatta International Airport
                code:
                  type: string
                  example: CGK
            arrival_airport:
              type: object
              properties:
                id:
                  type: integer
                  example: 2
                name:
                  type: string
                  example: Ngurah Rai International Airport
                code:
                  type: string
                  example: DPS
            airline:
              type: object
              properties:
                id:
                  type: integer
                  example: 1
                name:
                  type: string
                  example: Garuda Indonesia
            departure_time:
              type: string
              format: date-time
              example: 2024-07-01T09:00:00Z
            arrival_time:
              type: string
              format: date-time
              example: 2024-07-01T11:00:00Z

security:
  - google_oauth: []
